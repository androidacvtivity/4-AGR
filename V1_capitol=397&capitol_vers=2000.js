// main.js

const fields = {};

const readonlyFields = [
    "R001", "R007", "R014", "R021", "R036", "R038", "R039",
    "R056", "R062", "R066", "R093", "R150", "R161"
];

const formulas = {
    R001: ["R002", "R003", "R004", "R005", "R006"],
    R007: ["R008", "R009", "R010", "R011", "R012"],
    R014: ["R015", "R017", "R018", "R019"],
    R021: ["R022", "R023", "R024", "R026", "R027", "R028", "R029",
        "R031", "R032", "R033", "R034", "R035", "R037"],
    R036: ["R031", "R032", "R033", "R034", "R035"],
    R038: ["R014", "R021"],
    R039: ["R040", "R041", "R044", "R047", "R049", "R050", "R051",
        "R054", "R056", "R060", "R061"],
    R056: ["R057", "R059"],
    R062: ["R063", "R066", "R085", "R087", "R088", "R089",
        "R090", "R092"],
    R066: ["R067", "R069", "R070", "R071", "R072", "R073", "R074",
        "R075", "R076", "R077", "R078", "R079", "R080",
        "R081", "R082"],
    R093: ["R020", "R094", "R095", "R097", "R098", "R100",
        "R102", "R103", "R109", "R141"],
    R150: ["R038", "R039", "R062", "R093"],
    R161: ["R150", "-R151", "-R152", "R190"]
};

$(document).ready(() => {
    // Initialize field references
    Object.keys(formulas).forEach(key => {
        fields[key] = $(`#43_397_18${mapSuffix(key)}_1`);
    });
    Object.values(formulas).flat().forEach(key => {
        if (!fields[key]) fields[key] = $(`#43_397_18${mapSuffix(key)}_1`);
    });

    // Apply readonly
    readonlyFields.forEach(id => fields[id]?.prop("readonly", true));

    // Attach change listener
    $("input:not([type='button']):not([readonly]):not([disabled])")
        .on("change", () => CAP1());

    CAP1();
});

function CAP1() {
    Object.entries(formulas).forEach(([target, sources]) => {
        const precision = ["R062", "R066", "R150", "R161"].includes(target) ? 1 : 0;
        const total = sources.reduce((sum, id) => {
            const sign = id.startsWith('-') ? -1 : 1;
            const fieldId = id.replace('-', '');
            const val = parseFloat(fields[fieldId]?.val()) || 0;
            return sum + sign * val;
        }, 0);
        fields[target]?.val(Number(total.toFixed(precision)));
    });
}

function mapSuffix(code) {
    const map = {
        R001: "300_001", R002: "301_002", R003: "302_003", R004: "303_004", R005: "304_005",
        R006: "305_006", R007: "306_007", R008: "307_008", R009: "308_009", R010: "309_010",
        R011: "310_011", R012: "311_012", R013: "312_013", R014: "313_014", R015: "314_015",
        R017: "316_017", R018: "317_018", R019: "318_019", R020: "319_020", R021: "320_021",
        R022: "321_022", R023: "322_023", R024: "323_024", R026: "325_026", R027: "326_027",
        R028: "327_028", R029: "328_029", R031: "330_031", R032: "331_032", R033: "332_033",
        R034: "333_034", R035: "334_035", R036: "335_036", R037: "336_037", R038: "337_038",
        R039: "338_039", R040: "339_040", R041: "340_041", R044: "342_044", R047: "343_047",
        R049: "344_049", R050: "345_050", R051: "346_051", R054: "347_054", R056: "348_056",
        R057: "349_057", R059: "350_059", R060: "650_060", R061: "651_061", R062: "353_062",
        R063: "354_063", R066: "355_066", R067: "356_067", R069: "357_069", R070: "358_070",
        R071: "359_071", R072: "360_072", R073: "361_073", R074: "362_074", R075: "363_075",
        R076: "364_076", R077: "365_077", R078: "366_078", R079: "367_079", R080: "368_080",
        R081: "369_081", R082: "370_082", R085: "371_085", R087: "373_087", R088: "374_088",
        R089: "375_089", R090: "376_090", R092: "377_092", R093: "378_093", R094: "379_094",
        R095: "380_095", R097: "381_097", R098: "382_098", R100: "383_100", R102: "384_102",
        R103: "385_103", R109: "386_109", R141: "389_141", R150: "390_150", R151: "391_151",
        R152: "392_152", R161: "395_161", R190: "404_190"
    };
    return map[code] || "";
}
